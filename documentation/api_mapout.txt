
User
    id: number
    username: text

Comment
    id: number
    author: User
    content: text
    dateCreated: date
    upvoteScore: number
    userUpvoted?: boolean
    replies: [comment]
    replyCount: number
    deleted: boolean = false

Thread
    id: number
    title: text
    description: text
    dateCreated: date
    author: User
    upvoteScore: number
    userUpvoted?: boolean
    numberOfComments: number
    comments: [comment]


Home page:
    GET
    /threads?pageNumber={page number}&threadsPerPage={number of threads per page}
    - return most recent 25 threads. comments will be empty.

Thread out
    GET
    /threads/{threadID}/comments?startIndex={start index}&count={number of comments to return}
    - return up to `count` comments on thread at start index with length of count
    v2: &replyCount={number of replies per comment to return}

    GET
    /comments/{commentID}/replies?startIndex={start index}&count={number of replies to return}
    - return up to x amount of comments' replies at startindex
    v2: &replyReplyCount={number of replies per reply to return}

Thread in
    POST /threads/{threadID}/comments
        parameters:
            text: string
            authToken: token
        create: a new thread
        return: the Comment schema version of the comment posted

    POST /comments/{commentID}/replies
        parameters:
            text: string
            authToken: token
        create: the new reply
        return: the Comment schema version of the reply posted

    DELETE /comments/{commentID}
        parameters:
            authToken: token
        set: comment `deleted` property set to true
        return: success!

    POST /threads/{thread ID}/upvote
        parameters:
            upvote?: boolean
            authToken: token

    POST /comments/{comment ID}/upvote
        parameters:
            upvote?: boolean
            authToken: token

New Thread
    POST /threads
        parameters:
            title: text
            description: text
            authToken: token
        return: the Thread schema version of the thread posted

Sign in
    Post /auth/tokens
        parameters:
            username: string
            password: hashed string
        return: JWT

    GET /auth/tokens
        parameters:
            username: string
            password: hashed string
        return: JWT

    DELETE /auth/tokens
        parameters
            authToken (or refresh token?): token
        return: User successfully logged out!